1.Controller

##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Controller"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/controller"))
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end
 
#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;
 
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}VO;
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}DTO;
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.core.metadata.IPage;
import org.springframework.http.ResponseEntity;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.RequiredArgsConstructor;
import java.util.Objects;
 
/**
 * @Author $!author
 * @Desc $!{tableInfo.comment}($!{tableInfo.name})表控制层
 * @Date $!time.currTime()
 */
@Api(tags = "$!{tableInfo.comment}")
@RestController
@RequestMapping("$!tool.firstLowerCase($tableInfo.name)")
@RequiredArgsConstructor
public class $!{tableName} {
 
    private final $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;
 
 
    @ApiOperation("$!{tableInfo.comment}-分页查询")
    @PostMapping("/queryByPage")
    public ResponseEntity<IPage<$!{tableInfo.name}VO>> queryByPage(@RequestBody $!{tableInfo.name}DTO param) {
        return $!{tool.firstLowerCase($tableInfo.name)}Service.queryByPage(param);
    }
    
 
    @ApiOperation("$!{tableInfo.comment}-根据ID查详情")
    @PostMapping("/queryById")
    public ResponseEntity<$!{tableInfo.name}VO> queryById(@RequestBody $!{tableInfo.name}DTO param) {
        return $!{tool.firstLowerCase($tableInfo.name)}Service.queryById(param.getId());
    }
 
 
    @ApiOperation("$!{tableInfo.comment}-新增数据")
    @PostMapping("/insert")
    public ResponseEntity insert(@RequestBody $!{tableInfo.name} param) {
        return $!{tool.firstLowerCase($tableInfo.name)}Service.insert(param);
    }
 
 
    @ApiOperation("$!{tableInfo.comment}-编辑数据")
    @PostMapping("/update")
    public ResponseEntity update(@RequestBody $!{tableInfo.name} param) {
         if(Objects.isNull(param.getId())){
            return ResponseEntity.notFound().build();
        }
        return $!{tool.firstLowerCase($tableInfo.name)}Service.update(param);
    }
 
 
    @ApiOperation("$!{tableInfo.comment}-删除数据")
    @PostMapping("/deleteById")
    public ResponseEntity deleteById(@RequestBody $!{tableInfo.name}DTO param) {
        return $!{tool.firstLowerCase($tableInfo.name)}Service.deleteById(param.getId());
    }
 
}

2.dao


##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Mapper"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/mapper"))
 
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end
 
#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}mapper;
 
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}VO;
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}DTO;
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import java.util.List;
 
/**
 * @Author $!author  
 * @Desc $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层
 * @Date $!time.currTime()
 */
@Mapper
public interface $!{tableName} extends BaseMapper<$!{tableInfo.name}> {
 
    /**
     * 分页查询
     */
    IPage<$!{tableInfo.name}VO> queryByPage(Page page, @Param("param") $!{tableInfo.name}DTO param);
 
 
    /**
     * 根据ID查详情
     */
    $!{tableInfo.name}VO queryById($!pk.shortType $!pk.name);
 
 
    /**
     * 新增数据
     */
    int insertOne($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));
 /**
     * 新增实体属性不为null的数据,进数据库里
     * ps:
     *      单条数的插入
     * @param $!tool.firstLowerCase($!{tableInfo.name})
     * @return
     */
    int insertSelect($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));
   /**
     * 批量新增所有列，列表长度不能为0，且列表id统一为null或者统一不为null-
     * ps:
     *      多条数据的插入
     *      缺点:
     *      数据量大的话拼接成一条sql语句,会出现就会很长,导致执行数据库差
     *      列如:1,2,3,,4,5拼接成一条sql的insert执行
     * @param list
     * @return
     */
 
    int insertBatch(List<$!{tableInfo.name}> list);
 
    /**
     * 修改数据
     */
    int update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));
 
    /**
     * 通过主键删除数据
     */
    int deleteById($!pk.shortType $!pk.name);
 
}


3.entity


##引入宏定义
$!{define.vm}
 
##使用宏定义设置回调（保存位置与文件后缀）
#save("/entity", ".java")
 
##使用宏定义设置包后缀
#setPackageSuffix("entity")
 
##使用全局变量实现默认包导入
$!{autoImport.vm}
import lombok.Data;
import com.baomidou.mybatisplus.annotation.TableName;
 
##使用宏定义实现类注释信息
#tableComment("实体类")
@Data
@TableName(value = "$!tableInfo.obj.name")
public class $!{tableInfo.name} {
#foreach($column in $tableInfo.fullColumn)
    #if(${column.comment})/**
     * ${column.comment}
     */#end
 
    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};
#end
 
}


4.mapper

##引入mybatis支持
$!{mybatisSupport.vm}
 
##设置保存名称与保存位置
$!callback.setFileName($tool.append($!{tableInfo.name}, "Mapper.xml"))
$!callback.setSavePath($tool.append($modulePath, "/src/main/resources/mapper"))
 
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end
 
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper">
 
    <resultMap type="$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}VO" id="$!{tableInfo.name}VOMap">
        #foreach($column in $tableInfo.fullColumn)
            <result property="$!column.name" column="$!column.obj.name" jdbcType="$!column.ext.jdbcType"/>
        #end
    </resultMap>
 
 
    <!--分页查询-->
    <select id="queryByPage" parameterType="$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}DTO" resultMap="$!{tableInfo.name}VOMap">
        SELECT
            #allSqlColumn()
        
        FROM $!tableInfo.obj.name
        <where>
            #foreach($column in $tableInfo.fullColumn)
                <if test="param.$!column.name != null#if($column.type.equals("java.lang.String")) and param.$!column.name != ''#end">
                    AND $!column.obj.name = param.#{$!column.name}
                </if>
            #end
        </where>
        ORDER BY create_time DESC
    </select>
    
    
    <!--根据ID查详情-->
    <select id="queryById" parameterType="long" resultMap="$!{tableInfo.name}VOMap">
        SELECT
          #allSqlColumn()
        
        FROM $!tableInfo.obj.name
        WHERE $!pk.obj.name = #{$!pk.name} LIMIT 1
    </select>
   
     <!--新增实体属性不为null的列-->
    <insert id="insertSelect" keyProperty="$!pk.name" useGeneratedKeys="true" parameterType="$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}">
        insert into $!{tableInfo.obj.name}
        <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($column in  $tableInfo.fullColumn)
          <if test="$!column.name != null">
             $!column.obj.name,
          </if>
#end          
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($column in  $tableInfo.fullColumn)
          <if test="$!column.name != null">
             #{$!column.name,jdbcType=$!column.ext.jdbcType},
          </if>
#end
        </trim>
    </insert>
 
    <!--批量新增所有列，列表长度不能为0，且列表id统一为null或者统一不为null-->
    <insert id="insertBatch" keyProperty="$!pk.name" useGeneratedKeys="true" parameterType="list">
        insert into $!{tableInfo.obj.name}
         (#foreach($column in $tableInfo.fullColumn)$!{column.obj.name}#if($velocityHasNext), #end#end)
        values
        <foreach item="item" collection="list" separator="," open="" close="" index="index">
         (#foreach($column in $tableInfo.fullColumn)#{item.$!{column.name}}#if($velocityHasNext), #end#end)
        </foreach>
    </insert>

    <!--新增所有列-->
    <insert id="insertOne" keyProperty="$!pk.name" useGeneratedKeys="true">
        INSERT INTO $!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)
        VALUES (#foreach($column in $tableInfo.otherColumn)#{$!{column.name}}#if($velocityHasNext), #end#end)
    </insert>
    
 
    <!--通过主键修改数据-->
    <update id="update">
        UPDATE $!{tableInfo.obj.name}
        <set>
#foreach($column in $tableInfo.otherColumn)
            <if test="$!column.name != null#if($column.type.equals("java.lang.String")) and $!column.name != ''#end">
                $!column.obj.name = #{$!column.name},
            </if>
#end
        </set>
        WHERE $!pk.obj.name = #{$!pk.name}
    </update>
 
    <!--通过主键删除-->
    <delete id="deleteById">
        DELETE FROM $!{tableInfo.obj.name} WHERE $!pk.obj.name = #{$!pk.name} 
    </delete>
 
</mapper>


5.service



##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Service"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/service"))
 
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end
 
#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;
 
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}DTO;
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}VO;
import com.baomidou.mybatisplus.extension.service.IService;
import org.springframework.http.ResponseEntity;
import com.baomidou.mybatisplus.core.metadata.IPage;
 
/**
 * @Author $!author
 * @Desc $!{tableInfo.comment}($!{tableInfo.name})表服务接口
 * @Date $!time.currTime()
 */
public interface $!{tableName} extends IService<$!{tableInfo.name}> {
 
    /**
     * 分页查询
     */
    ResponseEntity<IPage<$!{tableInfo.name}VO>> queryByPage($!{tableInfo.name}DTO param);
 
    /**
     * 根据ID查详情
     */
    ResponseEntity queryById($!pk.shortType $!pk.name);
    
    /**
     * 新增数据
     */
    ResponseEntity insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));
 
    /**
     * 修改数据
     */
    ResponseEntity update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));
 
    /**
     * 通过主键删除数据
     */
    ResponseEntity deleteById($!pk.shortType $!pk.name);
 
}


6.serviceImpl


##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "ServiceImpl"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/service/impl"))
 
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end
 
#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;
 
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}DTO;
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}VO;
import $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.http.ResponseEntity;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 
/**
 * @Author $!author
 * @Desc $!{tableInfo.comment}($!{tableInfo.name})表服务实现类
 * @Date $!time.currTime()
 */
@RequiredArgsConstructor
@Service("$!tool.firstLowerCase($!{tableInfo.name})Service")
public class $!{tableName} extends ServiceImpl<$!{tableInfo.name}Mapper, $!{tableInfo.name}> implements $!{tableInfo.name}Service {
 
    private final $!{tableInfo.name}Mapper $!tool.firstLowerCase($!{tableInfo.name})Mapper;
 
 
    @Override
    public ResponseEntity<IPage<$!{tableInfo.name}VO>> queryByPage($!{tableInfo.name}DTO param) {
        return ResponseEntity.ok($!{tool.firstLowerCase($tableInfo.name)}Mapper.queryByPage(param, param));
    }
 
 
    @Override
    public ResponseEntity queryById($!pk.shortType $!pk.name) {
        return ResponseEntity.ok($!{tool.firstLowerCase($!{tableInfo.name})}Mapper.queryById($!pk.name));
    }
 
 
    @Override
    public ResponseEntity insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})) {
        int num = $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.insert($!tool.firstLowerCase($!{tableInfo.name}));
        return ResponseEntity.ok(num);
    }
 
 
    @Override
    public ResponseEntity update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})) {
        int num = $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.update($!tool.firstLowerCase($!{tableInfo.name}));
        return ResponseEntity.ok(num);
    }
 
 
    @Override
    public ResponseEntity deleteById($!pk.shortType $!pk.name) {
        int num = $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.deleteById($!pk.name);
        return ResponseEntity.ok(num);
    }
    
}



7.dto


##引入宏定义
$!{define.vm}
 
##使用宏定义设置回调（保存位置与文件后缀）
#save("/entity", "DTO.java")
 
##使用宏定义设置包后缀
#setPackageSuffix("entity")
 
##使用全局变量实现默认包导入
$!{autoImport.vm}
import lombok.Data;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
 
##使用宏定义实现类注释信息
#tableComment("DTO类")
@Data
public class $!{tableInfo.name}DTO extends Page {
#foreach($column in $tableInfo.fullColumn)
    #if(${column.comment})/**
     * ${column.comment}
     */#end
 
    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};
#end
 
}



8.vo

##引入宏定义
$!{define.vm}
 
##使用宏定义设置回调（保存位置与文件后缀）
#save("/entity", "VO.java")
 
##使用宏定义设置包后缀
#setPackageSuffix("entity")
 
##使用全局变量实现默认包导入
$!{autoImport.vm}
import lombok.Data;
 
##使用宏定义实现类注释信息
#tableComment("VO类")
@Data
public class $!{tableInfo.name}VO {
#foreach($column in $tableInfo.fullColumn)
    #if(${column.comment})/**
     * ${column.comment}
     */#end
 
    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};
#end
 
}


9.Interface



##引入宏定义
$!{define.vm}
##使用宏定义设置回调（保存位置与文件后缀）
#save("/readme", ".md")
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end
 
 
<!-- @Author $!author -->
<!-- @Date $!time.currTime() -->
 
$!{tableInfo.comment}($!{tableInfo.name})接口文档
===
 
1.分页查询
---
**接口地址：**
`/$!tool.firstLowerCase($tableInfo.name)/queryByPage`
 
**入参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
| size | long | 每页显示条数，默认 10 | 
| current | long | 当前页，默认是1 | 
#foreach($column in $tableInfo.fullColumn)
| $!{column.name} | $!{tool.getClsNameByFullName($column.type)} | ${column.comment} |
#end
 
**回参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
#foreach($column in $tableInfo.fullColumn)
| $!{column.name} | $!{tool.getClsNameByFullName($column.type)} | ${column.comment} |
#end
 
 
 
2.根据ID查详情
---
**接口地址：**
`/$!tool.firstLowerCase($tableInfo.name)/queryById`
 
**入参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
| $!pk.name | $!pk.shortType | 主键 | 
 
**回参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
#foreach($column in $tableInfo.fullColumn)
| $!{column.name} | $!{tool.getClsNameByFullName($column.type)} | ${column.comment} |
#end
 
 
 
3.新增数据
---
**接口地址：**
`/$!tool.firstLowerCase($tableInfo.name)/insert`
 
**入参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
#foreach($column in $tableInfo.fullColumn)
| $!{column.name} | $!{tool.getClsNameByFullName($column.type)} | ${column.comment} |
#end
 
**回参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
| data | int | 操作成功影响的行数 | 
 
4.编辑数据
---
**接口地址：**
`/$!tool.firstLowerCase($tableInfo.name)/update`
 
**入参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
#foreach($column in $tableInfo.fullColumn)
| $!{column.name} | $!{tool.getClsNameByFullName($column.type)} | ${column.comment} |
#end
 
**回参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
| data | int | 操作成功影响的行数 | 
 
5.删除数据
---
**接口地址：**
`/$!tool.firstLowerCase($tableInfo.name)/deleteById`
 
**入参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
| $!pk.name | $!pk.shortType | 主键 | 
 
**回参：**
| 参数名称 | 参数类型 | 参数描述 |
| :----: | :----: | :----: | 
| data | int | 操作成功影响的行数 | 

